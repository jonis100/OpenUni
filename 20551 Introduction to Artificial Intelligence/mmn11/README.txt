ממן 11 קורס מבוא לבינה מלאכותית
יוני שיבר
*********

1. האלגוריתם מומש בעזרת מחסנית המהווה את החזית ולולאה שרצה עד שהחזית ריקה, כלומר מצבים שאנו לא יכולים לפתח.
בכל איטרציה נוציא מצב מהחזית, נבדוק האם הוא עונה על מבחן המטרה, אם כן, נחזיר את המסלול, אחרת, נעבור על כל מממשיך שלו ונוסיף אותו לחזית אם לא ביקרנו בו.
DFS אינו אופטימלי מכיוון שהוא מחזיר את הפתרון הראשון  שהוא רואה.
למשל כאשר קיים פתרון לא אופטימלי שעמוק יותר מהפתרון האופטימלי, ואז האלגוריתם ימצא את המסלול הלא אופטימלי ראשון ויחזיר אותו.

2. מימשנו את האלגוריתם באופן דומה ל DFS, אך במקום מחסנית השתמשנו בתור, ובדקנו בנוסף שלא הוספנו את הממשיך לחזית באיטרציה קודמת.
BFS הוא אלגוריתם אופטימלי כאשר פונקצית המחיר הינה פונקציה לא יורדת של עומק הצומת, ובמקרה זה היא פונקציה
קבועה של 1 משמע שהיא לא יורדת ולכן האלגוריתם BFS מוצא פתרון זול ביותר.

3. מימוש הפונקציה בצורה דומה לאלגוריתם ה­BFS ,במקום תור . תור קדימויות, ובכל איטרציה של הלולאה בדיקה בנוסף האם הממשיך לא בוקר ונמצא בחזית, 
אם כן אז נבדוק האם הממשיך ייתן לנו מסלול זול יותר מהמסלול הישן, ונעדכן בהתאם.

4. מימוש הפונקציה בצורה דומה למימוש אלגוריתם DFS , במקום מחסנית,  בתור קדימויות שמקבל את הפונקציה הבאה לחישוב הקדימות של כל איבר:
 מחיר המסלול הנוכחי + היוריסטיקה על המצב והבעיה.

הרצות על openMaze:
הרצת DFS על המבוך מפתחת מספר גדול של מצבים, 577 ,ומוצאת מסלול לא אופטימלי במחיר של 298.
הרצת BFS ו­UCS מפתחות מספר גדול של מצבים, 682 ,אך מוצאות מסלול אופטימלי במחיר של 54.
הרצת *A עם יוריסטיקת distance manhattan מפתחת מספר נמוך יותר מאשר BFS
ו­UCS של מצבים, 535 ,ומוצאת את המסלול האופטימלי במחיר של 54.

5. הוגדר מצב להיות tuple של מצב במבוך וקבוצת הפינות שלא בוקרו, ולכן המצב ההתחלתי יהיה tuple של המצב ההתחלתי של פקמן, 
וקבוצת הפינות שלא בוקרו עדיין.
מצב המטרה הוגדר כמצב שקבוצת הפינות שלא בוקרו שלו היא ריקה.
עבור השגת הממשיכים נבדוק האם ממשיך הינו פינה שלא בוקרה, אם כן נעדכן את קבוצת הפינות שבוקרו, ונוסיף אותו למערך.

6. ביורסטיקת הפינות, מחשבים את כל סדרי הביקורים בפינות השונים, ומחשבים את המסלול לכל סידור.
היוריסטיקה תחזיר את אורך המסלול הקצר ביותר. היוריסטיקה משתמשת ביוריסטיקת מנהטן לחישוב ולכן היא קבילה.
חשוב לציין שבמקרה פרטי זה שבו יש רק 4 פינות היוריסטיקה יעילה, אך כאשר מספר הפינות עולה, היוריסטיקה תהיה לא יעילה כלל.

7. מימוש היוריסטיקה:
נמצא את האוכל הקרוב ביותר למצב הנוכחי, נקרא לו min . כעת נמצא את האוכל הרחוק ביותר מ­ min , נקרא לו max . 
היוריסטיקה תחזיר את מרחק המנהטן בין המצב הנוכחי ל­ min ומרחק המנהטן בין min ל­ max.
היוריסטיקה מחזירה סכום של מרחקי מנהטן ולכן קבילה ועקבית.
היוריסטיקה מפתחת 8440 צמתים במבוך trickySearch בזמן ריצה של כ­27  שניות.
	
8. מבחן המטרה הוגדר להיות האם בקואורדינטות המצב יש אוכל, וקראנו לאלגוריתם BFS על הבעיה שנוצרה ב­ findPathToClosestDot.
